package com.chartiq.finsemble.example;

import com.chartiq.finsemble.Finsemble;
import com.chartiq.finsemble.interfaces.CallbackListener;
import com.chartiq.finsemble.interfaces.clients.ILogger;
import com.jgoodies.forms.layout.CellConstraints;
import com.jgoodies.forms.layout.FormLayout;

import javax.swing.*;
import javax.swing.text.DefaultCaret;
import java.awt.*;
import java.util.Objects;

public class LogClientFrame {
    private JPanel mainPanel;
    private JRadioButton systemRadioButton;
    private JRadioButton devRadioButton;
    private JRadioButton perfRadioButton;
    private JButton logButton;
    private JButton infoButton;
    private JButton errorButton;
    private JButton debugButton;
    private JButton warnButton;
    private JButton verboseButton;
    private JTextArea textLogs;
    private JButton clearButton;
    private JTextField textField1;

    private final CallbackListener defaultCallback = ((err, res) -> {
        if (Objects.nonNull(err)) {
            writeLogs(err.toString(4));
        } else {
            writeLogs(res.toString(4));
        }
    });

    private void writeLogs(String text) {
        textLogs.append("\n" + text);
    }

    public LogClientFrame(Finsemble fsbl) {
        clearButton.addActionListener(e -> textLogs.setText(""));

        logButton.addActionListener(e -> getLogger(fsbl).log(textField1.getText()));
        errorButton.addActionListener(e -> getLogger(fsbl).error(textField1.getText()));
        warnButton.addActionListener(e -> getLogger(fsbl).warn(textField1.getText()));

        verboseButton.addActionListener(e -> getLogger(fsbl).verbose(textField1.getText()));
        infoButton.addActionListener(e -> getLogger(fsbl).info(textField1.getText()));
        debugButton.addActionListener(e -> getLogger(fsbl).debug(textField1.getText()));

        DefaultCaret caret = new DefaultCaret();
        caret.setUpdatePolicy(DefaultCaret.ALWAYS_UPDATE);
        textLogs.setCaret(caret);
    }

    private ILogger getLogger(Finsemble fsbl) {
        if (systemRadioButton.isSelected()) {
            return fsbl.getClients().getLoggerClient().system();
        } else if (devRadioButton.isSelected()) {
            return fsbl.getClients().getLoggerClient().dev();
        } else {
            return fsbl.getClients().getLoggerClient().perf();
        }
    }

    public JPanel getMainPanel() {
        return mainPanel;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new FormLayout("fill:max(d;4px):noGrow,left:4dlu:noGrow,fill:max(d;4px):noGrow,left:4dlu:noGrow,fill:max(d;4px):noGrow,left:4dlu:noGrow,fill:max(d;4px):noGrow,left:4dlu:noGrow,fill:d:grow,left:4dlu:noGrow,fill:max(d;4px):noGrow", "center:max(d;4px):noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow,top:4dlu:noGrow,center:d:grow,top:4dlu:noGrow,center:max(d;4px):noGrow"));
        mainPanel.setPreferredSize(new Dimension(640, 550));
        systemRadioButton = new JRadioButton();
        systemRadioButton.setSelected(false);
        systemRadioButton.setText("System");
        CellConstraints cc = new CellConstraints();
        mainPanel.add(systemRadioButton, cc.xy(3, 3));
        devRadioButton = new JRadioButton();
        devRadioButton.setSelected(true);
        devRadioButton.setText("Dev");
        mainPanel.add(devRadioButton, cc.xy(3, 5));
        perfRadioButton = new JRadioButton();
        perfRadioButton.setText("Pref");
        mainPanel.add(perfRadioButton, cc.xy(3, 7));
        final JLabel label1 = new JLabel();
        label1.setText("Category:");
        mainPanel.add(label1, cc.xy(3, 1));
        logButton = new JButton();
        logButton.setText("Log");
        mainPanel.add(logButton, cc.xy(3, 11));
        errorButton = new JButton();
        errorButton.setText("Error");
        mainPanel.add(errorButton, cc.xy(5, 11));
        debugButton = new JButton();
        debugButton.setText("Debug");
        mainPanel.add(debugButton, cc.xy(5, 13));
        infoButton = new JButton();
        infoButton.setText("Info");
        mainPanel.add(infoButton, cc.xy(7, 11));
        warnButton = new JButton();
        warnButton.setText("Warn");
        mainPanel.add(warnButton, cc.xy(3, 13));
        verboseButton = new JButton();
        verboseButton.setText("Verbose");
        mainPanel.add(verboseButton, cc.xy(7, 13));
        final JScrollPane scrollPane1 = new JScrollPane();
        mainPanel.add(scrollPane1, cc.xyw(3, 15, 7, CellConstraints.FILL, CellConstraints.FILL));
        textLogs = new JTextArea();
        scrollPane1.setViewportView(textLogs);
        clearButton = new JButton();
        clearButton.setText("Clear");
        mainPanel.add(clearButton, cc.xy(9, 17, CellConstraints.RIGHT, CellConstraints.DEFAULT));
        textField1 = new JTextField();
        textField1.setPreferredSize(new Dimension(49, 30));
        mainPanel.add(textField1, cc.xy(9, 13, CellConstraints.FILL, CellConstraints.DEFAULT));
        final JLabel label2 = new JLabel();
        label2.setText("Log message:");
        mainPanel.add(label2, cc.xy(9, 11));
        ButtonGroup buttonGroup;
        buttonGroup = new ButtonGroup();
        buttonGroup.add(systemRadioButton);
        buttonGroup.add(devRadioButton);
        buttonGroup.add(perfRadioButton);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }

}
